<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>闲蛋的笔记</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xiandan.in/"/>
  <updated>2021-01-21T14:21:34.245Z</updated>
  <id>https://xiandan.in/</id>
  
  <author>
    <name>xiandan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>免登录JDK下载地址</title>
    <link href="https://xiandan.in/posts/jdk-download.html"/>
    <id>https://xiandan.in/posts/jdk-download.html</id>
    <published>2021-01-19T16:49:54.000Z</published>
    <updated>2021-01-21T14:21:34.245Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>现在Oracle官网下载JDK需要登录，Github上有一个项目传了各个平台的JDK</p><p><a href="https://github.com/frekele/oracle-java/releases" target="_blank" rel="noopener">https://github.com/frekele/oracle-java/releases</a></p><h2 id="Java-Development-Kit-8u212-b10"><a href="#Java-Development-Kit-8u212-b10" class="headerlink" title="Java Development Kit 8u212-b10"></a>Java Development Kit 8u212-b10</h2><table><thead><tr><th>名称</th><th>大小</th><th>下载地址</th></tr></thead><tbody><tr><td>Linux ARM 32 Hard Float ABI</td><td>72.9 MB</td><td><a target="_blank" href="https://github.com//frekele/oracle-java/releases/download/8u212-b10/jdk-8u212-linux-arm32-vfp-hflt.tar.gz">jdk-8u212-linux-arm32-vfp-hflt.tar.gz</a></td></tr><tr><td>Linux ARM 64 Hard Float ABI</td><td>69.8 MB</td><td><a target="_blank" href="https://github.com//frekele/oracle-java/releases/download/8u212-b10/jdk-8u212-linux-arm64-vfp-hflt.tar.gz">jdk-8u212-linux-arm64-vfp-hflt.tar.gz</a></td></tr><tr><td>Linux x86</td><td>174 MB</td><td><a target="_blank" href="https://github.com//frekele/oracle-java/releases/download/8u212-b10/jdk-8u212-linux-i586.rpm">jdk-8u212-linux-i586.rpm</a></td></tr><tr><td>Linux x86</td><td>189 MB</td><td><a target="_blank" href="https://github.com//frekele/oracle-java/releases/download/8u212-b10/jdk-8u212-linux-i586.tar.gz">jdk-8u212-linux-i586.tar.gz</a></td></tr><tr><td>Linux x64</td><td>171 MB</td><td><a target="_blank" href="https://github.com//frekele/oracle-java/releases/download/8u212-b10/jdk-8u212-linux-x64.rpm">jdk-8u212-linux-x64.rpm</a></td></tr><tr><td>Linux x64</td><td>186 MB</td><td><a target="_blank" href="https://github.com//frekele/oracle-java/releases/download/8u212-b10/jdk-8u212-linux-x64.tar.gz">jdk-8u212-linux-x64.tar.gz</a></td></tr><tr><td>Mac OS X x64</td><td>252 MB</td><td><a target="_blank" href="https://github.com//frekele/oracle-java/releases/download/8u212-b10/jdk-8u212-macosx-x64.dmg">jdk-8u212-macosx-x64.dmg</a></td></tr><tr><td>Windows x86</td><td>203 MB</td><td><a target="_blank" href="https://github.com//frekele/oracle-java/releases/download/8u212-b10/jdk-8u212-windows-i586.exe">jdk-8u212-windows-i586.exe</a></td></tr><tr><td>Windows x64</td><td>215 MB</td><td><a target="_blank" href="https://github.com//frekele/oracle-java/releases/download/8u212-b10/jdk-8u212-windows-x64.exe">jdk-8u212-windows-x64.exe</a></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="开发工具" scheme="https://xiandan.in/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Java" scheme="https://xiandan.in/tags/Java/"/>
    
      <category term="Oracle" scheme="https://xiandan.in/tags/Oracle/"/>
    
      <category term="JDK" scheme="https://xiandan.in/tags/JDK/"/>
    
      <category term="JRE" scheme="https://xiandan.in/tags/JRE/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序wepy+vant-weapp Hello World</title>
    <link href="https://xiandan.in/posts/wepy-vant-helloworld.html"/>
    <id>https://xiandan.in/posts/wepy-vant-helloworld.html</id>
    <published>2020-12-22T13:23:45.000Z</published>
    <updated>2020-12-22T14:34:18.109Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>wepy：<a href="https://github.com/Tencent/wepy" target="_blank" rel="noopener">https://github.com/Tencent/wepy</a></li><li>vant-weapp：<a href="https://github.com/youzan/vant-weapp" target="_blank" rel="noopener">https://github.com/youzan/vant-weapp</a></li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h4 id="安装最新的wepy命令行工具"><a href="#安装最新的wepy命令行工具" class="headerlink" title="安装最新的wepy命令行工具"></a>安装最新的wepy命令行工具</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install @wepy/cli@next -g</span><br></pre></td></tr></table></figure><h4 id="生成开发示例"><a href="#生成开发示例" class="headerlink" title="生成开发示例"></a>生成开发示例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wepy init standard myproject</span><br></pre></td></tr></table></figure><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd myproject</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h4 id="安装vant-weapp"><a href="#安装vant-weapp" class="headerlink" title="安装vant-weapp"></a>安装vant-weapp</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i @vant/weapp -S --production</span><br></pre></td></tr></table></figure><p>将<code>node_modules/@vant/weapp/dist</code>文件夹复制到<code>src/components</code>重命名为<code>vant-weapp</code></p><h4 id="引入vant-weapp"><a href="#引入vant-weapp" class="headerlink" title="引入vant/weapp"></a>引入vant/weapp</h4><p>进入<code>wepy.config.js</code>，在<code>resolve - alias</code>增加别名<code>&#39;@vant&#39;: path.join(__dirname, &#39;src/components/vant-weapp&#39;)</code>，完整内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">resolve: &#123;</span><br><span class="line">  alias: &#123;</span><br><span class="line">    counter: path.join(__dirname, &apos;src/components/counter&apos;),</span><br><span class="line">    &apos;@&apos;: path.join(__dirname, &apos;src&apos;),</span><br><span class="line">    &apos;@vant&apos;: path.join(__dirname, &apos;src/components/vant-weapp&apos;)</span><br><span class="line">  &#125;,</span><br><span class="line">  aliasFields: [&apos;wepy&apos;, &apos;weapp&apos;],</span><br><span class="line">  modules: [&apos;node_modules&apos;]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>引入组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">usingComponents: &#123;</span><br><span class="line">  &quot;van-button&quot;: &quot;~@vant/button/index&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>开发实时编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wepy build --watch</span><br><span class="line"></span><br><span class="line">//或者</span><br><span class="line"></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p><a href="posts/wepy-webstorm.html">让wepy在WebStorm支持代码高亮</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="微信小程序" scheme="https://xiandan.in/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="wepy" scheme="https://xiandan.in/tags/wepy/"/>
    
      <category term="vant-weapp" scheme="https://xiandan.in/tags/vant-weapp/"/>
    
  </entry>
  
  <entry>
    <title>Node.js相关全局模块常用命令</title>
    <link href="https://xiandan.in/posts/nodejs-global-docs.html"/>
    <id>https://xiandan.in/posts/nodejs-global-docs.html</id>
    <published>2020-10-31T15:24:37.000Z</published>
    <updated>2021-03-14T05:46:07.389Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><ul><li>官网: <a href="https://nodejs.org" target="_blank" rel="noopener">https://nodejs.org</a></li><li>命令行文档: <a href="http://nodejs.cn/api/cli.html#cli_v_version" target="_blank" rel="noopener">http://nodejs.cn/api/cli.html#cli_v_version</a></li></ul><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><table><thead><tr><th>参数</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td><code>-u</code>, <code>--update</code></td><td>打印Node.js的版本号</td><td><code>node -v</code></td></tr></tbody></table><h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h2><ul><li>官网: <a href="https://www.npmjs.com/" target="_blank" rel="noopener">https://www.npmjs.com</a></li><li>文档: <a href="https://docs.npmjs.com/cli/v6/commands" target="_blank" rel="noopener">https://docs.npmjs.com/cli/v6/commands</a></li></ul><h3 id="安装或升级"><a href="#安装或升级" class="headerlink" title="安装或升级"></a>安装或升级</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g npm</span><br><span class="line"></span><br><span class="line">// 强制升级npm</span><br><span class="line">sudo npm install npm -g --force</span><br></pre></td></tr></table></figure><h3 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h3><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>npm -h</code></td><td>帮助</td></tr><tr><td><code>npm -v</code></td><td>查看npm版本</td></tr><tr><td><code>npm init</code></td><td>在当前文件夹初始化项目</td></tr><tr><td><code>npm init &lt;app_name&gt;</code><br><code>npm init hello-world</code></td><td>创建一个新项目</td></tr><tr><td><code>npm install</code></td><td>安装所有依赖</td></tr><tr><td><code>npm install &lt;package_name&gt;</code><br><code>npm install moment</code></td><td>安装指定软件包</td></tr><tr><td><code>npm uninstall &lt;package_name&gt;</code><br><code>npm uninstall moment</code></td><td>卸载指定软件包</td></tr><tr><td><code>npm start</code></td><td>启动项目</td></tr><tr><td><code>npm run [script]</code><br><code>npm run dev</code></td><td>运行<code>package.json/scripts</code>中的命令</td></tr><tr><td><code>npm update [-g] [&lt;package_name&gt;]</code><br><code>npm update</code><br><code>npm update moment</code></td><td>更新所有软件包<br>更新软件包</td></tr><tr><td><code>npm publish --access public</code></td><td>发布公开软件包到仓库</td></tr><tr><td><code>npm config set proxy &lt;proxy_url&gt;</code><br><code>npm config set proxy http://127.0.0.1:1087</code></td><td>设置http代理</td></tr><tr><td><code>npm config set https-proxy &lt;proxy_url&gt;</code><br><code>npm config set https-proxy http://127.0.0.1:1087</code></td><td>设置https代理</td></tr><tr><td><code>npm config delete proxy</code></td><td>取消http代理</td></tr><tr><td><code>npm config delete https-proxy</code></td><td>取消https代理</td></tr><tr><td><code>npm config set registry &lt;registry_url&gt;</code><br><code>npm config set registry http://registry.npmjs.org</code></td><td>设置仓库地址</td></tr><tr><td><code>npm config list</code></td><td>查看配置</td></tr></tbody></table><h2 id="nodemon"><a href="#nodemon" class="headerlink" title="nodemon"></a>nodemon</h2><h3 id="全局安装或升级"><a href="#全局安装或升级" class="headerlink" title="全局安装或升级"></a>全局安装或升级</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g nodemon</span><br></pre></td></tr></table></figure><h3 id="仅项目安装"><a href="#仅项目安装" class="headerlink" title="仅项目安装"></a>仅项目安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev nodemon</span><br></pre></td></tr></table></figure><h3 id="执行js并监听变化"><a href="#执行js并监听变化" class="headerlink" title="执行js并监听变化"></a>执行js并监听变化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nodemon index.js</span><br></pre></td></tr></table></figure><h2 id="pm2-pm2dev"><a href="#pm2-pm2dev" class="headerlink" title="pm2/pm2dev"></a>pm2/pm2dev</h2><ul><li>Github: <a href="https://github.com/Unitech/pm2" target="_blank" rel="noopener">https://github.com/Unitech/pm2</a></li><li>文档: <a href="https://pm2.keymetrics.io/docs/usage/quick-start/" target="_blank" rel="noopener">https://pm2.keymetrics.io/docs/usage/quick-start</a></li></ul><h3 id="安装或升级-1"><a href="#安装或升级-1" class="headerlink" title="安装或升级"></a>安装或升级</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g pm2</span><br></pre></td></tr></table></figure><h3 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h3><table><thead><tr><th>参数</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td><code>-h</code>, <code>--help</code></td><td>帮助</td><td><code>pm2 -h</code></td></tr><tr><td><code>-v</code>,<code>-V</code>, <code>--version</code></td><td>查看版本号</td><td><code>pm2 -v</code></td></tr><tr><td><code>start</code></td><td>启动并守护程序</td><td><code>pm2 start index.js</code></td></tr><tr><td><code>start</code> <code>--name &lt;app_name&gt;</code></td><td>指定应用名称</td><td><code>pm2 start index.js --name app</code></td></tr><tr><td><code>start</code> <code>--watch</code></td><td>监听文件改动并重启</td><td><code>pm2 start index.js --watch</code></td></tr><tr><td><code>start</code> <code>--max-memory-restart &lt;200MB&gt;</code></td><td>设置应用重新加载的内存阈值</td><td><code>pm2 start index.js  --max-memory-restart 200MB</code></td></tr><tr><td><code>start</code> <code>--log &lt;log_path&gt;</code></td><td>指定日志文件</td><td><code>pm2 start index.js --log /var/log/pm2.log</code></td></tr><tr><td><code>start</code> <code>-i &lt;number&gt;</code></td><td>指定进程数量（多进程负载均衡）</td><td><code>pm2 start index.js -i max</code></td></tr><tr><td><code>restart &lt;app_name&gt;</code></td><td>重启应用</td><td><code>pm2 restart app</code></td></tr><tr><td><code>restart all</code></td><td>重启所有应用</td><td><code>pm2 restart all</code></td></tr><tr><td><code>reload &lt;app_name&gt;</code></td><td>重载应用</td><td><code>pm2 reload app</code></td></tr><tr><td><code>reload all</code></td><td>重载所有应用</td><td><code>pm2 reload all</code></td></tr><tr><td><code>stop &lt;app_name&gt;</code></td><td>停止应用</td><td><code>pm2 stop app</code></td></tr><tr><td><code>stop all</code></td><td>停止所有应用</td><td><code>pm2 stop all</code></td></tr><tr><td><code>delete &lt;app_name&gt;</code></td><td>删除应用</td><td><code>pm2 delete app</code></td></tr><tr><td><code>delete all</code></td><td>删除所有应用</td><td><code>pm2 delete all</code></td></tr><tr><td><code>list</code>,<code>ls</code>,<code>status</code></td><td>列出所有应用的状态</td><td><code>pm2 ls</code></td></tr><tr><td><code>logs</code></td><td>实时显示日志</td><td><code>pm2 logs</code></td></tr><tr><td><code>logs &lt;app_name&gt;</code></td><td>实时显示某个应用的日志</td><td><code>pm2 logs app</code></td></tr><tr><td><code>startup</code></td><td>生成启动脚本并开机自启动</td><td><code>pm2 startup</code></td></tr><tr><td><code>unstartup</code></td><td>删除启动脚本并取消开机自启动</td><td><code>pm2 unstartup</code></td></tr><tr><td><code>save</code></td><td>保存进程列表</td><td><code>pm2 save</code></td></tr><tr><td><code>resurrect</code></td><td>恢复<code>pm2 save</code>保存的进程列表</td><td><code>pm2 resurrect</code></td></tr><tr><td><code>monit</code></td><td>基于终端的仪表盘</td><td><code>pm2 monit</code></td></tr><tr><td><code>plus</code></td><td>基于Web的仪表盘，带有跨服务器的诊断系统</td><td><code>pm2 plus</code></td></tr></tbody></table><h2 id="pm2-logrotate"><a href="#pm2-logrotate" class="headerlink" title="pm2-logrotate"></a>pm2-logrotate</h2><ul><li>Github: <a href="https://github.com/keymetrics/pm2-logrotate" target="_blank" rel="noopener">https://github.com/keymetrics/pm2-logrotate</a></li><li>文档: <a href="https://github.com/keymetrics/pm2-logrotate#configure" target="_blank" rel="noopener">https://github.com/keymetrics/pm2-logrotate#configure</a></li></ul><h3 id="安装或升级-2"><a href="#安装或升级-2" class="headerlink" title="安装或升级"></a>安装或升级</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 install pm2-logrotate</span><br></pre></td></tr></table></figure><h3 id="参数-3"><a href="#参数-3" class="headerlink" title="参数"></a>参数</h3><table><thead><tr><th>参数</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>max_size</code><br><code>pm2 set pm2-logrotate:max_size 10M</code></td><td><code>10M</code></td><td>日志文件超过此大小开始分割</td></tr><tr><td><code>retain</code><br><code>pm2 set pm2-logrotate:max_size 500</code></td><td><code>30</code></td><td>最多保留<code>retain</code>个日志文件</td></tr><tr><td><code>compress</code><br><code>pm2 set pm2-logrotate:compress false</code></td><td><code>false</code></td><td>是否通过gzip压缩日志</td></tr><tr><td><code>dateFormat</code><br><code>pm2 set pm2-logrotate:dateFormat YYYY-MM-DD_HH-mm-ss</code></td><td><code>YYYY-MM-DD_HH-mm-ss</code></td><td>日志文件名的时间格式</td></tr><tr><td><code>rotateModule</code><br><code>pm2 set pm2-logrotate:rotateModule true</code></td><td><code>true</code></td><td>像其它应用一样旋转pm2模块的日志</td></tr><tr><td><code>workerInterval</code><br><code>pm2 set pm2-logrotate:workerInterval 60</code></td><td><code>30</code></td><td>检查日志大小的间隔（单位：秒，最小为1）</td></tr><tr><td><code>rotateInterval</code><br><code>pm2 set pm2-logrotate:rotateInterval 0 0 * * *</code></td><td><code>0 0 * * *</code><br>（每天0点）</td><td>根据时间分割</td></tr><tr><td><code>TZ</code><br><code>pm2 set pm2-logrotate:TZ Etc/GMT+1</code></td><td>系统时间</td><td>这是用于偏移已保存日志文件的标准<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="noopener">时区数据库</a></td></tr></tbody></table><p>// 最多保留500个文件，每60秒检查一此文件大小，默认10M一个文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 set pm2-logrotate:retain 500 &amp;&amp; pm2 set pm2-logrotate:workerInterval 60</span><br></pre></td></tr></table></figure><h3 id="Cron风格"><a href="#Cron风格" class="headerlink" title="*Cron风格"></a>*Cron风格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*    *    *    *    *    *</span><br><span class="line">┬    ┬    ┬    ┬    ┬    ┬</span><br><span class="line">│    │    │    │    │    |</span><br><span class="line">│    │    │    │    │    └ day of week (0 - 7) (0 or 7 is Sun)</span><br><span class="line">│    │    │    │    └───── month (1 - 12)</span><br><span class="line">│    │    │    └────────── day of month (1 - 31)</span><br><span class="line">│    │    └─────────────── hour (0 - 23)</span><br><span class="line">│    └──────────────────── minute (0 - 59)</span><br><span class="line">└───────────────────────── second (0 - 59, OPTIONAL)</span><br></pre></td></tr></table></figure><h2 id="nvm"><a href="#nvm" class="headerlink" title="nvm"></a>nvm</h2><p>Node.js的版本管理器</p><ul><li>Github: <a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">https://github.com/nvm-sh/nvm</a></li><li>文档: <a href="https://github.com/dylang/npm-check#use" target="_blank" rel="noopener">https://github.com/dylang/npm-check#use</a></li></ul><h3 id="安装或升级-3"><a href="#安装或升级-3" class="headerlink" title="安装或升级"></a>安装或升级</h3><p>macOS</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 安装</span><br><span class="line">brew install nvm</span><br><span class="line"></span><br><span class="line">// 升级</span><br><span class="line">brew upgrade nvm</span><br></pre></td></tr></table></figure><p>Windows：<a href="https://github.com/coreybutler/nvm-windows" target="_blank" rel="noopener">nvm-windows</a></p><h3 id="参数-4"><a href="#参数-4" class="headerlink" title="参数"></a>参数</h3><table><thead><tr><th>参数</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td><code>-h</code>, <code>--help</code></td><td>帮助</td><td><code>nvm -h</code></td></tr><tr><td><code>-v</code>, <code>--version</code></td><td>查看nvm版本</td><td><code>nvm -v</code></td></tr><tr><td><code>install &lt;version&gt;</code></td><td>安装某个版本</td><td><code>nvm install 12.16.0</code></td></tr><tr><td><code>uninstall &lt;version&gt;</code></td><td>卸载某个版本</td><td><code>nvm uninstall 12.16.0</code></td></tr><tr><td><code>use &lt;version&gt;</code></td><td>使用某个版本</td><td><code>nvm use 12.16.0</code></td></tr><tr><td><code>current</code></td><td>显示当前激活的版本</td><td><code>nvm current</code></td></tr><tr><td><code>ls</code></td><td>列出已安装的版本</td><td><code>nvm ls</code></td></tr><tr><td><code>ls-remote</code></td><td>列出远程可用于安装的版本</td><td><code>nvm ls-remote</code></td></tr><tr><td><code>ls-remote --lts</code></td><td>列出远程可用于安装的长期支持版本</td><td><code>nvm ls-remote --lts</code></td></tr></tbody></table><h2 id="npm-check"><a href="#npm-check" class="headerlink" title="npm-check"></a>npm-check</h2><p>检查和更新npm依赖</p><ul><li>Github: <a href="https://github.com/dylang/npm-check" target="_blank" rel="noopener">https://github.com/dylang/npm-check</a></li><li>文档: <a href="https://github.com/dylang/npm-check#use" target="_blank" rel="noopener">https://github.com/dylang/npm-check#use</a></li></ul><h3 id="安装或升级-4"><a href="#安装或升级-4" class="headerlink" title="安装或升级"></a>安装或升级</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g npm-check</span><br></pre></td></tr></table></figure><h3 id="参数-5"><a href="#参数-5" class="headerlink" title="参数"></a>参数</h3><table><thead><tr><th>参数</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td><code>-u</code>, <code>--update</code></td><td>用交互式UI选择要更新的模块</td><td><code>npm-check -u</code></td></tr><tr><td><code>-y</code>, <code>--update-all</code></td><td>无任何提示自动更新所有模块</td><td><code>npm-check -y</code></td></tr><tr><td><code>-g</code>, <code>--global</code></td><td>检查全局安装的模块</td><td><code>npm-check -g</code><br><code>npm-check -g -u</code></td></tr><tr><td><code>-s</code>, <code>--skip-unused</code></td><td>跳过未使用模块的通知</td><td></td></tr><tr><td><code>-p</code>, <code>--production</code></td><td>仅检查<code>dependencies</code></td><td></td></tr><tr><td><code>-d</code>, <code>--dev-only</code></td><td>仅检查<code>devDependencies</code></td><td></td></tr><tr><td><code>-i</code>, <code>--ignore</code></td><td>忽略指定的模块（支持通配符）</td><td><code>npm-check -i babel-*</code></td></tr><tr><td><code>-E</code>, <code>--save-exact</code></td><td>确切版本将保存在package.json中</td><td></td></tr><tr><td><code>--specials</code></td><td>查找未使用的依赖项时，请检查特殊文件</td><td></td></tr><tr><td><code>--color</code>, <code>--no-color</code></td><td>启用或禁用颜色支持</td><td></td></tr><tr><td><code>--emoji</code>, <code>--no-emoji</code></td><td>启用或禁用表情符号支持</td><td></td></tr><tr><td><code>--spinner</code>, <code>--no-spinner</code></td><td>启用或禁用微调器</td><td></td></tr><tr><td><code>--debug</code></td><td>显示Debug输出</td><td></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Node.js" scheme="https://xiandan.in/categories/Node-js/"/>
    
    
      <category term="Node.js" scheme="https://xiandan.in/tags/Node-js/"/>
    
      <category term="npm" scheme="https://xiandan.in/tags/npm/"/>
    
      <category term="nvm" scheme="https://xiandan.in/tags/nvm/"/>
    
      <category term="pm2" scheme="https://xiandan.in/tags/pm2/"/>
    
  </entry>
  
  <entry>
    <title>用DroidCam将Android/iOS设备用作电脑摄像头</title>
    <link href="https://xiandan.in/posts/android-ios-pc-camera.html"/>
    <id>https://xiandan.in/posts/android-ios-pc-camera.html</id>
    <published>2020-09-12T10:53:14.000Z</published>
    <updated>2020-10-16T12:39:48.264Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>DroidCam官网：<a href="http://www.dev47apps.com/" target="_blank" rel="noopener">http://www.dev47apps.com</a></p></blockquote><h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><p>安装<a href="https://github.com/xiandanin/xiandanin.github.io/releases/download/android/DroidCam_Wireless_Webcam_v6.8.1.apk" target="_blank" rel="noopener">DroidCam_Wireless_Webcam_v6.8.1.apk</a>，等待服务建立成功后会显示IP和端口</p><p><img src="/posts/android-ios-pc-camera/droidcam_1.gif" width="300"></p><h2 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h2><blockquote><p>两种安装方式<br>1、App Store安装<a href="https://apps.apple.com/us/app/droidcam-wireless-webcam/id1510258102" target="_blank" rel="noopener">DroidCam Wireless Webcam</a><br>2、下载<a href="https://github.com/xiandanin/xiandanin.github.io/releases/download/ios/DroidCam_Wireless_Webcam_1.3.ipa" target="_blank" rel="noopener">DroidCam_Wireless_Webcam_1.3.ipa</a>参考<a href="install-ipa.html">《在Windows/macOS中安装ipa文件》</a>在本地安装</p></blockquote><p>等待服务建立成功后会显示IP和端口</p><p><img src="/posts/android-ios-pc-camera/droidcam_5.gif" width="400"></p><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>安装<a href="https://github.com/xiandanin/xiandanin.github.io/releases/download/windows/DroidCam.Setup.6.3.1.exe" target="_blank" rel="noopener">DroidCam_6.3.1.exe</a>，输入Android或iOS端显示的IP后点击<strong>start</strong></p><p><img src="/posts/android-ios-pc-camera/droidcam_2.jpg" width="400"></p><p>启动成功后就能在客户端中预览了，如果预览的画面方向不是正的，可以点击旋转<br><img src="/posts/android-ios-pc-camera/droidcam_4.jpg" width="400"></p><p>打开设备管理器已经可以看到有DroidCam创建的虚拟设备了<br><img src="/posts/android-ios-pc-camera/droidcam_3.jpg" width="600"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="https://xiandan.in/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="DroidCam" scheme="https://xiandan.in/tags/DroidCam/"/>
    
      <category term="网络摄像头" scheme="https://xiandan.in/tags/%E7%BD%91%E7%BB%9C%E6%91%84%E5%83%8F%E5%A4%B4/"/>
    
  </entry>
  
  <entry>
    <title>推荐一个在线AI分离人声伴奏的网站</title>
    <link href="https://xiandan.in/posts/extract-audio.html"/>
    <id>https://xiandan.in/posts/extract-audio.html</id>
    <published>2020-09-12T09:45:36.000Z</published>
    <updated>2020-09-12T10:07:06.220Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p><a href="https://www.lalal.ai/" target="_blank" rel="noopener">lalal.ai</a> - 基于世界排名第一的AI驱动技术的高质量音频分割</p></blockquote><p>下面是分离后的效果<br>        <div id="aplayer-FFqDsEei" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-FFqDsEei"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "人声",              author: "vocals.mp3",              url: "extract-audio/vocals.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></p>        <div id="aplayer-DARCCFxV" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-DARCCFxV"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "伴奏",              author: "accompaniment.mp3",              url: "extract-audio/accompaniment.mp3",              pic: "",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="https://xiandan.in/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="人声" scheme="https://xiandan.in/tags/%E4%BA%BA%E5%A3%B0/"/>
    
      <category term="伴奏" scheme="https://xiandan.in/tags/%E4%BC%B4%E5%A5%8F/"/>
    
      <category term="分离" scheme="https://xiandan.in/tags/%E5%88%86%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>Charles在Android7.0以上抓包https出现&lt;unknown&gt;的解决办法</title>
    <link href="https://xiandan.in/posts/charles-https.html"/>
    <id>https://xiandan.in/posts/charles-https.html</id>
    <published>2020-09-12T09:22:11.000Z</published>
    <updated>2020-09-12T17:47:21.561Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Android7.0以上<strong>仅信任系统提供的证书</strong>，不再信任用户添加的证书颁发机构 (CA)，所以直接安装Charles的证书抓包https已经无效，会出现<code>&lt;unknown&gt;</code></p><blockquote><p><a href="https://developer.android.google.cn/about/versions/nougat/android-7.0#default_trusted_ca" target="_blank" rel="noopener">Android 7.0 开发者版本 - 默认受信任的证书颁发机构</a></p></blockquote><p><img src="/posts/charles-https/charles_0.jpg" width="500"></p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>既然是仅信任系统提供的证书，那么可以把Charles安装为系统证书，这个操作需要设备已经ROOT</p><h4 id="保存Charles证书（文件名为charles-ssl-proxying-certificate-pem）到本地"><a href="#保存Charles证书（文件名为charles-ssl-proxying-certificate-pem）到本地" class="headerlink" title="保存Charles证书（文件名为charles-ssl-proxying-certificate.pem）到本地"></a>保存Charles证书（文件名为<code>charles-ssl-proxying-certificate.pem</code>）到本地</h4><img src="/posts/charles-https/charles_1.jpg"><h4 id="获取证书文件Hash值"><a href="#获取证书文件Hash值" class="headerlink" title="获取证书文件Hash值"></a>获取证书文件Hash值</h4><p><code>openssl x509 -subject_hash_old -in charles-ssl-proxying-certificate.pem</code></p><p><img src="/posts/charles-https/charles_2.jpg" width="600"></p><h4 id="重命名证书文件"><a href="#重命名证书文件" class="headerlink" title="重命名证书文件"></a>重命名证书文件</h4><p>证书的命名规则是<code>[Hash].[Number]</code>，后缀名的数字是为了避免文件名冲突，如果有多个证书的Hash值是一样的，后缀名的数字就可以从0开始编上号。<br>比如上步获取的Hash值为<code>10f7f839</code>，重命名证书文件为<code>10f7f839.0</code></p><h4 id="安装成系统证书"><a href="#安装成系统证书" class="headerlink" title="安装成系统证书"></a>安装成系统证书</h4><p>把重命名后的证书文件推送到手机上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb push 10f7f839.0 /sdcard</span><br></pre></td></tr></table></figure><p><img src="/posts/charles-https/charles_3.jpg" width="400"></p><p>用RE管理器之类的文件管理器，将证书文件复制到<code>/system/etc/security/cacerts/</code>文件夹</p><p><img src="/posts/charles-https/charles_4.gif" width="300"></p><h4 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h4><p>再次抓包，已经可以看到请求了</p><img src="/posts/charles-https/charles_5.jpg">]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="开发工具" scheme="https://xiandan.in/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="抓包" scheme="https://xiandan.in/tags/%E6%8A%93%E5%8C%85/"/>
    
      <category term="Charles" scheme="https://xiandan.in/tags/Charles/"/>
    
  </entry>
  
  <entry>
    <title>修改Git历史提交记录的提交者名称和邮箱</title>
    <link href="https://xiandan.in/posts/git-history-author.html"/>
    <id>https://xiandan.in/posts/git-history-author.html</id>
    <published>2019-12-31T07:14:57.000Z</published>
    <updated>2020-12-13T16:44:34.922Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>来源：<a href="https://stackoverflow.com/questions/750172/how-to-change-the-author-and-committer-name-and-e-mail-of-multiple-commits-in-gi" target="_blank" rel="noopener">https://stackoverflow.com/questions/750172/how-to-change-the-author-and-committer-name-and-e-mail-of-multiple-commits-in-gi</a></p><p>修改旧邮箱<code>OLD_EMAIL</code>，新姓名<code>CORRECT_NAME</code>，新邮箱<code>CORRECT_EMAIL</code>，执行此脚本</p><p><strong>此方法虽然可以达到效果，但使用<code>git-filter-branch</code>会对历史记录重写产生明显的干扰，所以需要慎用</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">git filter-branch --env-filter &apos;</span><br><span class="line">OLD_EMAIL=&quot;your-old-email@example.com&quot;</span><br><span class="line">CORRECT_NAME=&quot;Your Correct Name&quot;</span><br><span class="line">CORRECT_EMAIL=&quot;your-correct-email@example.com&quot;</span><br><span class="line">if [ &quot;$GIT_COMMITTER_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]</span><br><span class="line">then</span><br><span class="line">    export GIT_COMMITTER_NAME=&quot;$CORRECT_NAME&quot;</span><br><span class="line">    export GIT_COMMITTER_EMAIL=&quot;$CORRECT_EMAIL&quot;</span><br><span class="line">fi</span><br><span class="line">if [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]</span><br><span class="line">then</span><br><span class="line">    export GIT_AUTHOR_NAME=&quot;$CORRECT_NAME&quot;</span><br><span class="line">    export GIT_AUTHOR_EMAIL=&quot;$CORRECT_EMAIL&quot;</span><br><span class="line">fi</span><br><span class="line">&apos; --tag-name-filter cat -- --branches --tags</span><br></pre></td></tr></table></figure><p>完成后强制提交</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --force</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Git" scheme="https://xiandan.in/categories/Git/"/>
    
    
      <category term="Github" scheme="https://xiandan.in/tags/Github/"/>
    
      <category term="Git" scheme="https://xiandan.in/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>迁移Git历史记录到Git LFS</title>
    <link href="https://xiandan.in/posts/git-lfs-migrate.html"/>
    <id>https://xiandan.in/posts/git-lfs-migrate.html</id>
    <published>2019-12-31T04:23:01.000Z</published>
    <updated>2020-12-13T15:55:29.248Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Git LFS是Github开源的Git扩展，用于对大型文件进行版本控制，可以解决Github对单个文件限制100M的问题</p><ul><li>官网：<a href="https://git-lfs.github.com" target="_blank" rel="noopener">https://git-lfs.github.com</a></li><li>Github：<a href="https://github.com/git-lfs/git-lfs" target="_blank" rel="noopener">https://github.com/git-lfs/git-lfs</a></li><li>迁移文档：<a href="https://github.com/git-lfs/git-lfs/blob/master/docs/man/git-lfs-migrate.1.ronn" target="_blank" rel="noopener">https://github.com/git-lfs/git-lfs/blob/master/docs/man/git-lfs-migrate.1.ronn</a></li></ul><h2 id="迁移"><a href="#迁移" class="headerlink" title="迁移"></a>迁移</h2><p>先用<a href="https://gist.github.com/Maxattax97/f566fdf67ac4ad2492ea1c732f5afdda" target="_blank" rel="noopener">gitlistobjectbysize.sh</a>按文件大小排序列出大文件，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash -e</span><br><span class="line"># work over each commit and append all files in tree to $tempFile</span><br><span class="line">tempFile=$(mktemp)</span><br><span class="line">IFS=$&apos;\n&apos;</span><br><span class="line">for commitSHA1 in $(git rev-list --all); do</span><br><span class="line">git ls-tree -r --long &quot;$commitSHA1&quot; &gt;&gt;&quot;$tempFile&quot;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"># sort files by SHA1, de-dupe list and finally re-sort by filesize</span><br><span class="line">sort --key 3 &quot;$tempFile&quot; | \</span><br><span class="line">uniq | \</span><br><span class="line">sort --key 4 --numeric-sort --reverse | \</span><br><span class="line">awk &apos;!visited[$5]++&apos; | \</span><br><span class="line">awk &apos;&#123; split( &quot;B KB MB GB&quot; , v ); s=1; while( $4&gt;1024 )&#123; $4/=1024; s++ &#125; print int($4) &quot; &quot; v[s] &quot;\t\t&quot; $5 &#125;&apos; | \</span><br><span class="line">tac</span><br><span class="line"></span><br><span class="line"># remove temp file</span><br><span class="line">rm &quot;$tempFile&quot;</span><br></pre></td></tr></table></figure><p>运行此脚本需要先安装tac</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install coreutils</span><br></pre></td></tr></table></figure><p><img src="/posts/git-lfs-migrate/1.jpg" width="400"></p><p>将列出的大文件或文件夹加入<code>--include</code>，多个以<code>,</code>分隔</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 加入assets文件夹 指定master分支 仅显示迁移信息不迁移</span><br><span class="line">git lfs migrate info --include=&quot;src/main/assets&quot; --include-ref=master</span><br><span class="line"></span><br><span class="line">//执行迁移</span><br><span class="line">git lfs migrate import --include=&quot;src/main/assets&quot; --include-ref=master --verbose</span><br><span class="line"></span><br><span class="line">//强制提交</span><br><span class="line">git push --force</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Git" scheme="https://xiandan.in/categories/Git/"/>
    
    
      <category term="Git" scheme="https://xiandan.in/tags/Git/"/>
    
      <category term="Git LFS" scheme="https://xiandan.in/tags/Git-LFS/"/>
    
  </entry>
  
  <entry>
    <title>Git特殊使用场景命令</title>
    <link href="https://xiandan.in/posts/git-command.html"/>
    <id>https://xiandan.in/posts/git-command.html</id>
    <published>2019-12-31T03:23:01.000Z</published>
    <updated>2020-12-13T16:45:06.920Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="删除已推到远程分支的提交"><a href="#删除已推到远程分支的提交" class="headerlink" title="删除已推到远程分支的提交"></a>删除已推到远程分支的提交</h2><p><code>git log</code>复制需要回滚的<strong>commit_id</strong>，把<strong>HEAD</strong>指向这个commit_id并强制推送</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard [commit_id]</span><br><span class="line">git push origin HEAD --force</span><br></pre></td></tr></table></figure><h4 id="交互式命令"><a href="#交互式命令" class="headerlink" title="交互式命令"></a>交互式命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;输入要回滚的commit id&quot; &amp;&amp; read id &amp;&amp; git reset --hard $id &amp;&amp; git push origin HEAD --force</span><br></pre></td></tr></table></figure><h2 id="强制更新"><a href="#强制更新" class="headerlink" title="强制更新"></a>强制更新</h2><p>抛弃当前所有的变更并更新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git fetch --all</span><br><span class="line">git reset --hard origin/[分支名称]</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h4 id="交互式命令-1"><a href="#交互式命令-1" class="headerlink" title="交互式命令"></a>交互式命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;输入要更新的分支(default: master)&quot; &amp;&amp; read input &amp;&amp; branch=$&#123;input:=master&#125; &amp;&amp; echo 从&quot;$branch&quot;拉取更新 &amp;&amp; git fetch --all &amp;&amp; git reset --hard origin/&quot;$branch&quot; &amp;&amp; git pull</span><br></pre></td></tr></table></figure><h2 id="克隆到非空文件夹"><a href="#克隆到非空文件夹" class="headerlink" title="克隆到非空文件夹"></a>克隆到非空文件夹</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone --no-checkout [git_url] tmp</span><br><span class="line">mv tmp/.git .</span><br><span class="line">rmdir tmp</span><br><span class="line">git reset --hard HEAD</span><br></pre></td></tr></table></figure><h4 id="交互式命令-2"><a href="#交互式命令-2" class="headerlink" title="交互式命令"></a>交互式命令</h4><p>克隆并覆盖当前文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;输入要克隆的URL&quot; &amp;&amp; read url &amp;&amp; echo 克隆&quot;$url&quot;到当前文件夹 &amp;&amp; git clone --no-checkout $url tmp &amp;&amp; mv tmp/.git . &amp;&amp; rmdir tmp &amp;&amp; git reset --hard HEAD</span><br></pre></td></tr></table></figure><h2 id="更改全局用户名和邮箱"><a href="#更改全局用户名和邮箱" class="headerlink" title="更改全局用户名和邮箱"></a>更改全局用户名和邮箱</h2><p>全局用户名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;[用户名]&quot;</span><br></pre></td></tr></table></figure><p>全局邮箱</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;[邮箱地址]&quot;</span><br></pre></td></tr></table></figure><h2 id="给Github设置SSH代理"><a href="#给Github设置SSH代理" class="headerlink" title="给Github设置SSH代理"></a>给Github设置SSH代理</h2><p>来源：<a href="https://gist.github.com/chuyik/02d0d37a49edc162546441092efae6a1" target="_blank" rel="noopener">https://gist.github.com/chuyik/02d0d37a49edc162546441092efae6a1</a></p><p>修改或创建config</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.ssh/config</span><br></pre></td></tr></table></figure><p>设置Github走1080端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// macOS</span><br><span class="line">Host github.com</span><br><span class="line">   HostName github.com</span><br><span class="line">   User git</span><br><span class="line">   # Socks5</span><br><span class="line">   ProxyCommand nc -v -x 127.0.0.1:1080 %h %p</span><br><span class="line"></span><br><span class="line">// Windows</span><br><span class="line">Host github.com</span><br><span class="line">   HostName github.com</span><br><span class="line">   User git</span><br><span class="line">   # Socks5</span><br><span class="line">   ProxyCommand connect -S 127.0.0.1:1080 %h %p</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Git" scheme="https://xiandan.in/categories/Git/"/>
    
    
      <category term="Git" scheme="https://xiandan.in/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>搬瓦工/Vultr/JustMySocks对比</title>
    <link href="https://xiandan.in/posts/bwg-vultr-justmysocks.html"/>
    <id>https://xiandan.in/posts/bwg-vultr-justmysocks.html</id>
    <published>2019-06-03T07:17:17.000Z</published>
    <updated>2020-11-12T15:57:30.321Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="搬瓦工"><a href="#搬瓦工" class="headerlink" title="搬瓦工"></a>搬瓦工</h2><p><a href="https://bwh88.net/aff.php?aff=48595" target="_blank" rel="noopener">搬瓦工</a>是IT7旗下的VPS品牌，相对国内的VPS性价比很高。</p><h2 id="JustMySocks"><a href="#JustMySocks" class="headerlink" title="JustMySocks"></a>JustMySocks</h2><p><a href="https://justmysocks3.net/members/aff.php?gid=1&amp;aff=1627&amp;language=chinese" target="_blank" rel="noopener">JustMySocks</a>是搬瓦工推出的代理服务，相对VPS也是便宜很多，并且很稳定。</p><p><img src="/posts/bwg-vultr-justmysocks/4.jpg" width="500"></p><h2 id="Vultr"><a href="#Vultr" class="headerlink" title="Vultr"></a>Vultr</h2><p>除了搬瓦工，还有<a href="https://www.vultr.com/?ref=8093231" target="_blank" rel="noopener">Vultr</a>也可以用，比搬瓦工要贵，但是按小时付费的，所以可以随时更换。</p><p>可以先<a href="https://www.vultr.com/faq/#downloadspeedtests" target="_blank" rel="noopener">测速</a>再选择适合自己的机房</p><p>Vultr的工单处理的很快，快的时候2分钟就回复了，而且可以随时提现余额</p><h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><p>价格更新于2019-09-23，不排除涨价降价的可能，以官网显示为准</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">类型</th><th style="text-align:center">最低档价格</th><th style="text-align:center">最低档流量</th><th style="text-align:center">速度</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td style="text-align:center">搬瓦工</td><td style="text-align:center">VPS</td><td style="text-align:center">$49.99/年</td><td style="text-align:center">1T/月</td><td style="text-align:center">正常</td><td>硬件配置性价比更高</td><td>1.被墙就只能花钱改IP<br>2.最低档的只能年付</td></tr><tr><td style="text-align:center">Vultr</td><td style="text-align:center">VPS</td><td style="text-align:center">$0.007/时<br>$5/月<br>$60/年</td><td style="text-align:center">1T/月</td><td style="text-align:center">略慢</td><td>1.可以随时开通和取消<br>2.余额可随时提现<br>3.工单处理快</td><td>1.国内访问相对较慢<br>2.价格较高</td></tr><tr><td style="text-align:center">JustMySocks</td><td style="text-align:center">服务</td><td style="text-align:center">$2.88/月<br>$28.88/年</td><td style="text-align:center">100G/月</td><td style="text-align:center">正常</td><td>1.最便宜<br>2.稳定</td><td>不能自定义端口/密码/域名</td></tr></tbody></table><h2 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h2><p>搬瓦工官网：<a href="https://bandwagonhost.com/aff.php?aff=48595" target="_blank" rel="noopener">https://bandwagonhost.com</a><br>搬瓦工官网：<a href="https://bwh88.net/aff.php?aff=48595" target="_blank" rel="noopener">https://bwh88.net</a>（国内可访问）</p><p>Vultr官网：<a href="https://www.vultr.com/?ref=8093231" target="_blank" rel="noopener">https://www.vultr.com</a>  </p><p>JustMySocks官网：<a href="https://justmysocks.net/members/aff.php?gid=1&amp;aff=1627&amp;language=chinese" target="_blank" rel="noopener">https://justmysocks.net</a><br>JustMySocks官网：<a href="https://justmysocks3.net/members/aff.php?gid=1&amp;aff=1627&amp;language=chinese" target="_blank" rel="noopener">https://justmysocks3.net</a>（国内可访问）  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="VPS" scheme="https://xiandan.in/categories/VPS/"/>
    
    
      <category term="搬瓦工" scheme="https://xiandan.in/tags/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
      <category term="Vultr" scheme="https://xiandan.in/tags/Vultr/"/>
    
      <category term="JustMySocks" scheme="https://xiandan.in/tags/JustMySocks/"/>
    
  </entry>
  
  <entry>
    <title>搬瓦工被墙后</title>
    <link href="https://xiandan.in/posts/bwg-gfw.html"/>
    <id>https://xiandan.in/posts/bwg-gfw.html</id>
    <published>2019-06-03T07:10:42.000Z</published>
    <updated>2020-11-12T15:57:19.814Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="验证是否被墙"><a href="#验证是否被墙" class="headerlink" title="验证是否被墙"></a>验证是否被墙</h2><ul><li>在<a href="http://port.ping.pe" target="_blank" rel="noopener">http://port.ping.pe</a>输入服务器IP和SSH端口号，如果国外节点成功国内节点失败说明被墙</li></ul><p><img src="/posts/bwg-gfw/1.jpg" width="500"></p><ul><li>也可以登录控制面板，进入到<a href="https://kiwivm.64clouds.com/main-exec.php?mode=blacklistcheck" target="_blank" rel="noopener">Block List Check</a>，出现<code>IP BLOCKED</code>说明被墙</li></ul><img src="/posts/bwg-gfw/3.png"><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>咨询了搬瓦工，回复原文如下：</p><p><img src="/posts/bwg-gfw/4.png" width="600"></p><p>其中提到了几个解决办法：</p><blockquote><p>1.停止服务，也许几天或几周后会解除；<br>2.付费8.79美元<a href="https://bwh88.net/ipchange.php" target="_blank" rel="noopener">更换新的IP</a>；<br>3.使用<a href="https://justmysocks3.net/members/aff.php?gid=1&amp;aff=1627&amp;language=chinese" target="_blank" rel="noopener">JustMySocks</a>。</p></blockquote><p><strong>查看 <a href="bwg-vultr-justmysocks.html">搬瓦工/Vultr/JustMySocks对比</a></strong></p><h2 id="也许有效的预防措施"><a href="#也许有效的预防措施" class="headerlink" title="也许有效的预防措施"></a>也许有效的预防措施</h2><p>3月1日至17日左右，6月1日至10日左右都是可能被墙的时期，期间最好关机，也许可以防止被墙</p><h2 id="亲测解除"><a href="#亲测解除" class="headerlink" title="亲测解除"></a>亲测解除</h2><p>6月3号被墙，<strong>关机</strong>直到7月7日再测发现已经解除了</p><p><img src="/posts/bwg-gfw/2.png" width="500"></p>]]></content>
    
    <summary type="html">
    
      搬瓦工被墙后的解决方案
    
    </summary>
    
      <category term="VPS" scheme="https://xiandan.in/categories/VPS/"/>
    
    
      <category term="搬瓦工" scheme="https://xiandan.in/tags/%E6%90%AC%E7%93%A6%E5%B7%A5/"/>
    
      <category term="Vultr" scheme="https://xiandan.in/tags/Vultr/"/>
    
      <category term="JustMySocks" scheme="https://xiandan.in/tags/JustMySocks/"/>
    
  </entry>
  
  <entry>
    <title>Studio 3T外网远程访问MongoDB</title>
    <link href="https://xiandan.in/posts/studio-3t-mongodB.html"/>
    <id>https://xiandan.in/posts/studio-3t-mongodB.html</id>
    <published>2019-05-29T13:51:02.000Z</published>
    <updated>2019-11-03T16:42:36.413Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Studio 3T：<a href="https://studio3t.com/download" target="_blank" rel="noopener">https://studio3t.com/download</a></p><p>MongoDB：<a href="http://www.mongodb.org" target="_blank" rel="noopener">http://www.mongodb.org</a></p><h2 id="设置MongoDB"><a href="#设置MongoDB" class="headerlink" title="设置MongoDB"></a>设置MongoDB</h2><p>以<a href="https://www.bt.cn/?invite_code=MV9va2p0bmQ=" target="_blank" rel="noopener">宝塔面板</a>为例，进入到MongoDB的配置文件，将<code>bindIp</code>改成<code>0.0.0.0</code>，表示支持任何ip访问，重启MongoDB生效</p><p><img src="/posts/studio-3t-mongodB/1.jpg" width="600"></p><h2 id="开放端口"><a href="#开放端口" class="headerlink" title="开放端口"></a>开放端口</h2><p>如果没开放端口，还需要在防火墙开放MongoDB端口</p><p><img src="/posts/studio-3t-mongodB/4.jpg" width="400"></p><h2 id="远程连接MongoDB"><a href="#远程连接MongoDB" class="headerlink" title="远程连接MongoDB"></a>远程连接MongoDB</h2><p>打开Studio 3T，<code>Connect</code> - <code>New Connection</code>输入服务器IP和MongoDB的端口，保存后直接双击即可连接</p><img src="/posts/studio-3t-mongodB/2.jpg"><h2 id="添加用户验证"><a href="#添加用户验证" class="headerlink" title="添加用户验证"></a>添加用户验证</h2><p>以上设置开启了<code>不限制IP</code>并且<code>不需要用户验证</code>，是很不安全的，所以还需要添加用户验证<br>切换至<code>admin</code>数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br><span class="line">use admin</span><br></pre></td></tr></table></figure><p>添加一个用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.createUser(</span><br><span class="line">  &#123;</span><br><span class="line">    user: &quot;[用户名]&quot;,</span><br><span class="line">    pwd: &quot;[密码]&quot;,</span><br><span class="line">    roles: [ &#123; role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot; &#125; ]</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>在配置文件将<code>authorization</code>改为<code>enabled</code>，保存后重启生效</p><p><img src="/posts/studio-3t-mongodB/3.jpg" width="600"></p><h2 id="备份-mongodump-与恢复-mongorestore"><a href="#备份-mongodump-与恢复-mongorestore" class="headerlink" title="备份(mongodump)与恢复(mongorestore)"></a>备份(mongodump)与恢复(mongorestore)</h2><p>mongodump备份，如果端口是27017，命令中可以省略</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongodump -h [地址]:[端口] -d [数据库] -o [备份导出目录]</span><br></pre></td></tr></table></figure><p>mongorestore恢复，如果端口是27017，命令中可以省略</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongorestore -h [地址]:[端口] -d [数据库] [备份所在目录]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="开发工具" scheme="https://xiandan.in/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="MongoDB" scheme="https://xiandan.in/tags/MongoDB/"/>
    
      <category term="Studio 3T" scheme="https://xiandan.in/tags/Studio-3T/"/>
    
  </entry>
  
  <entry>
    <title>利用CDN加速你的Github Pages</title>
    <link href="https://xiandan.in/posts/github-pages-cdn.html"/>
    <id>https://xiandan.in/posts/github-pages-cdn.html</id>
    <published>2019-04-22T03:22:53.000Z</published>
    <updated>2020-11-12T15:57:12.250Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近发现Github Pages有时候打开很慢，甚至打不开，ping一下平均200多毫秒，还有超时的情况<br><img src="/posts/github-pages-cdn/6.jpg" width="400"></p><p>再看一下<a href="http://tool.chinaz.com/speedtest.aspx" target="_blank" rel="noopener">网站测速</a>也很慢，移动更是全部超时<br><img src="/posts/github-pages-cdn/7.png" width="700"></p><h3 id="开通CDN"><a href="#开通CDN" class="headerlink" title="开通CDN"></a>开通CDN</h3><p>这里我用的是阿里云的<a href="https://www.aliyun.com/product/dcdn?source=5176.11533457&amp;userCode=cogjad1y" target="_blank" rel="noopener">全站加速</a>，具体资费看<a href="https://www.aliyun.com/price/product?source=5176.11533457&amp;userCode=cogjad1y#/dcdn/detail" target="_blank" rel="noopener">全站加速价格</a></p><p>也可以用<a href="https://cloud.tencent.com/act/cps/redirect?redirect=10108&amp;cps_key=428911fa608edf4bc44ef8419a4f57be" target="_blank" rel="noopener">腾讯云</a>，目前免费300G流量</p><p><img src="/posts/github-pages-cdn/1.jpg" width="500"></p><h3 id="添加域名"><a href="#添加域名" class="headerlink" title="添加域名"></a>添加域名</h3><p>开通全站加速后到<a href="https://dcdn.console.aliyun.com/domain/list" target="_blank" rel="noopener">控制台</a>添加域名，在<code>加速域名</code>填写你的域名，选择<code>源站域名</code>，填写你的Github Page地址，如果开启了HTTPS就选择443端口，加速的区域不同地方不同价格，这个看自己需求。</p><p><img src="/posts/github-pages-cdn/2.jpg" width="600"></p><p>添加成功后会生成一个CNAME地址，将你的域名解析到这个地址，如果你的域名也是阿里云的，可以在控制台一键配置。<br>这个不是实时生效的，如果解析后发现没有生效可以等一段时间再看。</p><p><img src="/posts/github-pages-cdn/4.jpg" width="700"><br><img src="/posts/github-pages-cdn/3.jpg" width="700"></p><h3 id="测试效果"><a href="#测试效果" class="headerlink" title="测试效果"></a>测试效果</h3><p>再次ping你的域名，会发现跳转是你CDN的地址，不再是github.io，加速效果也很明显</p><p><img src="/posts/github-pages-cdn/5.jpg" width="400"></p><p>再看一下<a href="http://tool.chinaz.com/speedtest.aspx" target="_blank" rel="noopener">网站测速</a>中国地图一片绿<br><img src="/posts/github-pages-cdn/8.png" width="700"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="https://xiandan.in/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Github Pages" scheme="https://xiandan.in/tags/Github-Pages/"/>
    
      <category term="CDN" scheme="https://xiandan.in/tags/CDN/"/>
    
  </entry>
  
  <entry>
    <title>Mac安装Elastic Stack和基础配置</title>
    <link href="https://xiandan.in/posts/elastic-stack-install.html"/>
    <id>https://xiandan.in/posts/elastic-stack-install.html</id>
    <published>2019-04-18T08:22:42.000Z</published>
    <updated>2019-10-19T22:34:41.119Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Elastic官网：<a href="https://www.elastic.co/cn/" target="_blank" rel="noopener">https://www.elastic.co</a><br>Elastic Github：<a href="https://github.com/elastic" target="_blank" rel="noopener">https://github.com/elastic</a></p><ul><li><a href="Elasticsearch">Elasticsearch</a>： 全文搜索引擎</li><li><a href="https://www.elastic.co/cn/products/kibana" target="_blank" rel="noopener">Kibana</a>：可视化分析平台</li><li><a href="https://www.elastic.co/cn/products/beats/filebeat" target="_blank" rel="noopener">Filebeat</a>：日志采集</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install elastic/tap/elasticsearch-full</span><br></pre></td></tr></table></figure><h3 id="Kibana"><a href="#Kibana" class="headerlink" title="Kibana"></a>Kibana</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install elastic/tap/kibana-full</span><br></pre></td></tr></table></figure><h3 id="Filebeat"><a href="#Filebeat" class="headerlink" title="Filebeat"></a>Filebeat</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install elastic/tap/filebeat-full</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="配置Filebeat"><a href="#配置Filebeat" class="headerlink" title="配置Filebeat"></a>配置Filebeat</h3><p>匹配要输入的Log文件路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/etc/filebeat/filebeat.yml</span><br></pre></td></tr></table></figure><p><img src="/posts/elastic-stack-install/1.jpg" width="500"></p><h3 id="开启Kibana中文"><a href="#开启Kibana中文" class="headerlink" title="开启Kibana中文"></a>开启Kibana中文</h3><p>打开配置文件，将<code>i18n.locale</code>的注释去掉，改成<code>zh-CN</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/etc/kibana/kibana.yml</span><br></pre></td></tr></table></figure><p><img src="/posts/elastic-stack-install/2.jpg" width="500"></p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><h4 id="前台启动"><a href="#前台启动" class="headerlink" title="前台启动"></a>前台启动</h4><p>需要3个终端窗口，分别启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">filebeat -e -d &quot;publish&quot;</span><br><span class="line">elasticsearch</span><br><span class="line">kibana</span><br></pre></td></tr></table></figure><h4 id="后台启动"><a href="#后台启动" class="headerlink" title="后台启动"></a>后台启动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nohup filebeat -e -d &quot;publish&quot; &gt;/dev/null 2&gt;log &amp;</span><br><span class="line">nohup elasticsearch &gt;/dev/null 2&gt;log &amp;</span><br><span class="line">nohup kibana &gt;/dev/null 2&gt;log &amp;</span><br></pre></td></tr></table></figure><p>全部启动完成后，打开浏览器访问 <a href="http://localhost:5601" target="_blank" rel="noopener">http://localhost:5601</a></p><p><img src="/posts/elastic-stack-install/3.jpg" width="500"></p><h2 id="添加Apache日志"><a href="#添加Apache日志" class="headerlink" title="*添加Apache日志"></a>*添加Apache日志</h2><p><a href="http://localhost:5601/app/kibana#/home/tutorial_directory/logging" target="_blank" rel="noopener">将数据添加到 Kibana</a></p><p>将<code>setup.kibana</code>中的<code>host</code>注释去掉 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/etc/filebeat/filebeat.yml</span><br></pre></td></tr></table></figure><p><img src="/posts/elastic-stack-install/4.jpg" width="500"></p><p>开启Apache</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filebeat modules enable apache</span><br><span class="line">filebeat setup</span><br></pre></td></tr></table></figure><p>修改apache的Log路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/etc/filebeat/modules.d/apache.yml</span><br></pre></td></tr></table></figure><p><img src="/posts/elastic-stack-install/5.jpg" width="500"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="开发工具" scheme="https://xiandan.in/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Elastic Stack" scheme="https://xiandan.in/tags/Elastic-Stack/"/>
    
      <category term="Elasticsearch" scheme="https://xiandan.in/tags/Elasticsearch/"/>
    
      <category term="Kibana" scheme="https://xiandan.in/tags/Kibana/"/>
    
      <category term="Filebeat" scheme="https://xiandan.in/tags/Filebeat/"/>
    
      <category term="日志分析" scheme="https://xiandan.in/tags/%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio多设备同步配置</title>
    <link href="https://xiandan.in/posts/android-studio-sync.html"/>
    <id>https://xiandan.in/posts/android-studio-sync.html</id>
    <published>2019-04-17T11:50:56.000Z</published>
    <updated>2019-06-03T13:29:49.400Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>JetBrains全家桶都有一个<a href="https://www.jetbrains.com/help/idea/settings-tools-settings-repository.html" target="_blank" rel="noopener">Settings Repository</a>功能，可以把IDE的配置同步到Git仓库中，这里用Github做例子，来实现多设备同步IDE配置。</p><h2 id="创建保存配置的仓库"><a href="#创建保存配置的仓库" class="headerlink" title="创建保存配置的仓库"></a>创建保存配置的仓库</h2><p>在<a href="https://github.com/new" target="_blank" rel="noopener">Github</a>创建一个仓库后，复制git地址</p><p><img src="/posts/android-studio-sync/2.png" width="400"></p><h2 id="配置Git-URL"><a href="#配置Git-URL" class="headerlink" title="配置Git URL"></a>配置Git URL</h2><p><code>File</code> - <code>Settings Repository</code>填入刚刚的git地址</p><p><img src="/posts/android-studio-sync/1.png" width="200"></p><p><img src="/posts/android-studio-sync/3.png" width="400"></p><blockquote><p>Overwrite Remote：上传配置，用本地配置覆盖仓库。<br>Overwrite Local：下载配置，用仓库配置覆盖本地。<br>Merge：将仓库配置和本地配置进行合并。</p></blockquote><h2 id="上传配置到仓库"><a href="#上传配置到仓库" class="headerlink" title="上传配置到仓库"></a>上传配置到仓库</h2><p>点击<code>Overwrite Remote</code>会开始上传配置，出现<code>Settings successfully synced</code>说明同步成功</p><p><img src="/posts/android-studio-sync/5.jpg" width="300"></p><p>刷新页面可以看到配置文件已经全部上传到仓库了</p><p><img src="/posts/android-studio-sync/4.jpg" width="600"></p><h2 id="恢复配置到本地"><a href="#恢复配置到本地" class="headerlink" title="恢复配置到本地"></a>恢复配置到本地</h2><p>如果需要在另一台设备恢复配置，在<code>Settings Repository</code>配置仓库的git地址后执行<code>Overwrite Local</code>即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="开发工具" scheme="https://xiandan.in/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Android Studio" scheme="https://xiandan.in/tags/Android-Studio/"/>
    
      <category term="同步" scheme="https://xiandan.in/tags/%E5%90%8C%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>Github短信验证码没有中国区的解决办法</title>
    <link href="https://xiandan.in/posts/github-verification-code.html"/>
    <id>https://xiandan.in/posts/github-verification-code.html</id>
    <published>2019-04-08T06:07:40.000Z</published>
    <updated>2019-11-03T16:44:57.091Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在<a href="https://help.github.com/articles/countries-where-sms-authentication-is-supported/" target="_blank" rel="noopener">Github短信支持列表</a>的国家上是没有中国的</p><p>后来看到<a href="https://gist.github.com/xcatliu/4e1d5e69fc5f8a49e4e6" target="_blank" rel="noopener">xcatliu</a>提供的思路，我试了一下是可以收到验证码的，所以我在这里放一个更简单的方法</p><img src="/posts/github-verification-code/1.jpg"><h3 id="手动添加-86"><a href="#手动添加-86" class="headerlink" title="手动添加+86"></a>手动添加+86</h3><p>打开开发者工具，复制代码到控制台执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var option = new Option(&quot;China +86&quot;,&quot;+86&quot;);</span><br><span class="line">option.selected = true;</span><br><span class="line">document.getElementById(&apos;countrycode&apos;).options.add(option, 0);</span><br></pre></td></tr></table></figure><img src="/posts/github-verification-code/2.gif">]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Github" scheme="https://xiandan.in/categories/Github/"/>
    
    
      <category term="Github" scheme="https://xiandan.in/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Mac在Docker里的CentOS安装宝塔面板</title>
    <link href="https://xiandan.in/posts/mac-docker-centos-bt.html"/>
    <id>https://xiandan.in/posts/mac-docker-centos-bt.html</id>
    <published>2019-04-01T14:33:16.000Z</published>
    <updated>2019-11-03T16:42:59.518Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="相关官网"><a href="#相关官网" class="headerlink" title="相关官网"></a>相关官网</h2><ul><li>Docker：<a href="https://www.docker.com" target="_blank" rel="noopener">https://www.docker.com</a></li><li>Kitematic：<a href="https://kitematic.com" target="_blank" rel="noopener">https://kitematic.com</a></li><li>宝塔面板：<a href="https://www.bt.cn/?invite_code=MV9va2p0bmQ=" target="_blank" rel="noopener">https://www.bt.cn</a></li></ul><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install docker</span><br></pre></td></tr></table></figure><h2 id="在Docker里安装CentOS"><a href="#在Docker里安装CentOS" class="headerlink" title="在Docker里安装CentOS"></a>在Docker里安装CentOS</h2><p>Docker Hub：<a href="https://hub.docker.com/_/centos" target="_blank" rel="noopener">https://hub.docker.com/_/centos</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull centos</span><br></pre></td></tr></table></figure><p>也可以在Kitematic里搜索CentOS安装</p><p><img src="/posts/mac-docker-centos-bt/1.png" width="500"></p><h2 id="映射宝塔端口"><a href="#映射宝塔端口" class="headerlink" title="映射宝塔端口"></a>映射宝塔端口</h2><p>创建一个CentOS容器并映射<code>8888</code>端口，复制返回的<code>容器ID</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -it -p 8888:8888 centos</span><br></pre></td></tr></table></figure><p><img src="/posts/mac-docker-centos-bt/2.jpg" width="500"></p><h2 id="进入CentOS安装宝塔"><a href="#进入CentOS安装宝塔" class="headerlink" title="进入CentOS安装宝塔"></a>进入CentOS安装宝塔</h2><p>进入容器终端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it [容器ID] bash</span><br></pre></td></tr></table></figure><p><strong>在CentOS中</strong>执行宝塔安装命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p>安装完成后，提示给的外网IP是用不了的，所以这里需要用<code>本地ip</code>访问面板</p><p><img src="/posts/mac-docker-centos-bt/3.jpg" width="600"></p><h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><p><a href="https://www.runoob.com/docker/docker-command-manual.html" target="_blank" rel="noopener">Docker 命令大全</a></p><p>列出正在运行的容器信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p>列出所有容器信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><p>停止所有容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -a -q)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="开发工具" scheme="https://xiandan.in/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Docker" scheme="https://xiandan.in/tags/Docker/"/>
    
      <category term="CentOS" scheme="https://xiandan.in/tags/CentOS/"/>
    
      <category term="Kitematic" scheme="https://xiandan.in/tags/Kitematic/"/>
    
  </entry>
  
  <entry>
    <title>在Windows/macOS中安装ipa文件</title>
    <link href="https://xiandan.in/posts/install-ipa.html"/>
    <id>https://xiandan.in/posts/install-ipa.html</id>
    <published>2019-02-26T15:58:22.000Z</published>
    <updated>2020-09-12T10:35:25.619Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Windows-爱思助手"><a href="#Windows-爱思助手" class="headerlink" title="Windows - 爱思助手"></a>Windows - 爱思助手</h2><blockquote><p>爱思助手：<a href="https://www.i4.cn/pro_pc.html" target="_blank" rel="noopener">https://www.i4.cn</a> </p></blockquote><p>连接设备后，点击右上角的下载图标进入到下载中心，直接将ipa文件拖到下载中心点击安装</p><p><img src="/posts/install-ipa/install_ipa_1.gif" width="700"></p><h2 id="macOS-Apple-Configurator-2"><a href="#macOS-Apple-Configurator-2" class="headerlink" title="macOS - Apple Configurator 2"></a>macOS - Apple Configurator 2</h2><blockquote><p>Apple Configurator 2：<a href="https://apps.apple.com/cn/app/apple-configurator-2/id1037126344" target="_blank" rel="noopener">https://apps.apple.com/cn/app/apple-configurator-2/id1037126344</a> </p></blockquote><p>从Mac AppStore安装Apple Configurator 2<br><img src="/posts/install-ipa/install_ipa_2.jpg" width="400"></p><p>打开后连接设备，选中设备点击<code>添加</code>，<code>从我的Mac选取...</code>选择ipa文件</p><p><img src="/posts/install-ipa/install_ipa_3.jpg" width="600"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="https://xiandan.in/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="爱思助手" scheme="https://xiandan.in/tags/%E7%88%B1%E6%80%9D%E5%8A%A9%E6%89%8B/"/>
    
      <category term="Apple Configurator" scheme="https://xiandan.in/tags/Apple-Configurator/"/>
    
      <category term="ipa" scheme="https://xiandan.in/tags/ipa/"/>
    
  </entry>
  
  <entry>
    <title>用Apple Configurator 2提取ipa文件</title>
    <link href="https://xiandan.in/posts/get-ipa.html"/>
    <id>https://xiandan.in/posts/get-ipa.html</id>
    <published>2019-02-26T14:48:17.000Z</published>
    <updated>2020-09-12T10:40:23.648Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="安装Apple-Configurator-2"><a href="#安装Apple-Configurator-2" class="headerlink" title="安装Apple Configurator 2"></a>安装Apple Configurator 2</h2><p>从Mac AppStore安装Apple Configurator 2</p><p><img src="/posts/get-ipa/1.png" width="500"></p><h2 id="下载ipa"><a href="#下载ipa" class="headerlink" title="下载ipa"></a>下载ipa</h2><p>打开后连接设备，在顶部菜单栏中的帐户登录Apple ID，选中设备点击添加，登录后会把你在AppStore下过的应用都列出来，选一个添加</p><p><img src="/posts/get-ipa/2.png" width="600"></p><p>因为手机上已经装了这个应用，所以最后一步会提示是否替换，<strong>不要做任何操作，保持这个状态</strong></p><p><img src="/posts/get-ipa/3.png" width="400"></p><h2 id="提取ipa"><a href="#提取ipa" class="headerlink" title="提取ipa"></a>提取ipa</h2><p>用Finder<code>前往文件夹</code>进到下面的路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/Library/Group Containers/K36BKF7T3D.group.com.apple.configurator/Library/Caches/Assets/TemporaryItems/MobileApps/</span><br></pre></td></tr></table></figure><p>一直进到最里面的文件夹，会发现刚刚下载的ipa文件</p><p><img src="/posts/get-ipa/4.png" width="700"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="工具" scheme="https://xiandan.in/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Apple Configurator" scheme="https://xiandan.in/tags/Apple-Configurator/"/>
    
      <category term="ipa" scheme="https://xiandan.in/tags/ipa/"/>
    
  </entry>
  
  <entry>
    <title>让wepy在WebStorm支持代码高亮</title>
    <link href="https://xiandan.in/posts/wepy-webstorm.html"/>
    <id>https://xiandan.in/posts/wepy-webstorm.html</id>
    <published>2019-02-25T09:45:26.000Z</published>
    <updated>2020-10-27T18:22:47.919Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="支持wpy"><a href="#支持wpy" class="headerlink" title="支持wpy"></a>支持wpy</h2><p><code>Preferences</code> - <code>Editor</code> - <code>File Types</code><br>选择<code>Vue.js Template</code>，添加<code>*.wpy</code></p><p><img src="/posts/wepy-webstorm/5.png" width="600"></p><h2 id="支持特殊标签"><a href="#支持特殊标签" class="headerlink" title="支持特殊标签"></a>支持特殊标签</h2><p><code>Preferences</code> - <code>Editor</code> - <code>Language Injections</code><br>添加<code>XML Tag Injection</code></p><p><img src="/posts/wepy-webstorm/1.jpg" width="600"></p><h4 id="高亮config标签"><a href="#高亮config标签" class="headerlink" title="高亮config标签"></a>高亮config标签</h4><p><code>Namespace</code>用<code>http://www.w3.org/1999/html</code></p><p><img src="/posts/wepy-webstorm/2.jpg" width="400"></p><h4 id="高亮wxs标签"><a href="#高亮wxs标签" class="headerlink" title="高亮wxs标签"></a>高亮wxs标签</h4><p><img src="/posts/wepy-webstorm/3.jpg" width="400"></p><h2 id="支持rpx"><a href="#支持rpx" class="headerlink" title="支持rpx"></a>支持rpx</h2><p><code>Preferences</code> - <code>Tools</code> - <code>File Watchers</code>添加<code>custom</code>  </p><p><img src="/posts/wepy-webstorm/6.png" width="600"></p><p>Program: <code>sed</code><br>Arguments（macOS）: <code>-i &quot;&quot; s/&quot;\ rpx&quot;/rpx/g $FilePath$</code><br>Arguments（Windows）: <code>-i s/&quot;\ rpx&quot;/rpx/g $FilePath$</code><br>Output paths to refresh: <code>$FilePath$</code>  </p><blockquote><p>*如果是Windows需要先安装<a href="https://github.com/mbuilov/sed-windows" target="_blank" rel="noopener">sed-windows</a>，<code>Program</code>则换成<code>sed</code>的安装路径  </p></blockquote><p><img src="/posts/wepy-webstorm/7.png" width="600"></p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/posts/wepy-webstorm/4.jpg" width="600"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="开发工具" scheme="https://xiandan.in/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="wepy" scheme="https://xiandan.in/tags/wepy/"/>
    
      <category term="WebStorm" scheme="https://xiandan.in/tags/WebStorm/"/>
    
      <category term="小程序" scheme="https://xiandan.in/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
</feed>
