{"meta":{"title":"闲蛋的笔记","subtitle":null,"description":null,"author":"denghaha","url":"https://dyhdyh.com"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2018-12-16T08:55:18.150Z","updated":"2018-12-16T08:55:18.150Z","comments":false,"path":"/404.html","permalink":"https://dyhdyh.com//404.html","excerpt":"","text":""},{"title":"关于","date":"2018-12-16T08:55:18.151Z","updated":"2018-12-16T08:55:18.151Z","comments":false,"path":"about/index.html","permalink":"https://dyhdyh.com/about/index.html","excerpt":"","text":"这个人是真的懒，什么也没有写"},{"title":"书单","date":"2018-12-16T08:55:18.163Z","updated":"2018-12-16T08:55:18.163Z","comments":false,"path":"books/index.html","permalink":"https://dyhdyh.com/books/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-12-16T08:55:18.163Z","updated":"2018-12-16T08:55:18.163Z","comments":false,"path":"categories/index.html","permalink":"https://dyhdyh.com/categories/index.html","excerpt":"","text":""},{"title":"贡献","date":"2019-02-04T07:07:59.852Z","updated":"2019-02-04T07:03:51.145Z","comments":false,"path":"contribution/index.html","permalink":"https://dyhdyh.com/contribution/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-12-16T08:55:18.163Z","updated":"2018-12-16T08:55:18.163Z","comments":true,"path":"links/index.html","permalink":"https://dyhdyh.com/links/index.html","excerpt":"","text":""},{"title":"项目","date":"2018-12-16T08:55:18.163Z","updated":"2018-12-16T08:55:18.163Z","comments":false,"path":"repository/index.html","permalink":"https://dyhdyh.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-12-16T08:55:18.164Z","updated":"2018-12-16T08:55:18.164Z","comments":false,"path":"tags/index.html","permalink":"https://dyhdyh.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Splash适配解决启动图拉伸的问题","slug":"android-splash-compat","date":"2019-01-28T05:55:06.000Z","updated":"2019-02-04T06:35:25.026Z","comments":true,"path":"posts/android-splash-compat.html","link":"","permalink":"https://dyhdyh.com/posts/android-splash-compat.html","excerpt":"","text":"https://github.com/dengyuhan/SplashCompatSample 前言做过Splash的都知道，一般的做法是在style中设置windowBackground为启动图，来避免冷启动时的黑屏，但是如果放一张尺寸的图在某些屏幕上就会出现拉伸，并且windowBackground还不能centerCrop，就算通过资源限定符也不能完美的适配。 效果左边是小米5S（1080x1920），右边是小米MIX2（全面屏1080x2160） 适配过程这个例子比较简单，在显示windowBackground时白色背景+slogan，跳到SplashActivity后上面广告+下面slogan 1. windowBackground首先需要解决windowBackground的拉伸问题，用一整张图肯定不行，所以这里只需要一张slogan图片，然后通过layer-list来实现。 在drawable下建一个splash.xml 1234567891011121314151617&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;layer-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt; &lt;!--白色矩形 作为背景色--&gt; &lt;item&gt; &lt;shape android:shape=&quot;rectangle&quot;&gt; &lt;solid android:color=&quot;@android:color/white&quot; /&gt; &lt;/shape&gt; &lt;/item&gt; &lt;!--单独的slogan图片 并且设置下间距--&gt; &lt;item android:bottom=&quot;@dimen/margin_vertical_splash&quot;&gt; &lt;!--位置设置成靠下--&gt; &lt;bitmap android:gravity=&quot;bottom&quot; android:src=&quot;@drawable/splash_logo&quot; /&gt; &lt;/item&gt;&lt;/layer-list&gt; 2. Activity Theme新建一个Splash主题，windowBackground设置成刚刚建的splash.xml 1234&lt;style name=&quot;AppTheme.Splash&quot; parent=&quot;Theme.AppCompat.Light.NoActionBar&quot;&gt; &lt;item name=&quot;android:windowFullscreen&quot;&gt;true&lt;/item&gt; &lt;item name=&quot;android:windowBackground&quot;&gt;@drawable/splash&lt;/item&gt;&lt;/style&gt; 将SplashActivity设成Splash主题 12345678&lt;activity android:name=&quot;.SplashActivity&quot; android:theme=&quot;@style/AppTheme.Splash&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt; &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt; &lt;/intent-filter&gt;&lt;/activity&gt; 看看效果，在有NavigationBar的手机上，slogan图片被遮住了。 在5.0后，增加了一个windowDrawsSystemBarBackgrounds属性，用来标志此窗口是否负责绘制系统栏背景，我们把它设成false，这样当它绘制windowBackground的时候，就会在NavigationBar之上。 因为这个属性是5.0以后才有的，所以需要新建values-v21文件夹，以便5.0以上的机器使用v21的Splash主题。 12345&lt;style name=&quot;AppTheme.Splash&quot; parent=&quot;Theme.AppCompat.Light.NoActionBar&quot;&gt; &lt;item name=&quot;android:windowFullscreen&quot;&gt;true&lt;/item&gt; &lt;item name=&quot;android:windowBackground&quot;&gt;@drawable/splash&lt;/item&gt; &lt;item name=&quot;android:windowDrawsSystemBarBackgrounds&quot;&gt;false&lt;/item&gt;&lt;/style&gt; 3. SplashActivity因为主题中设置的windowBackground，可以不需要在Activity中再放slogan图片了，只需要放一个广告图片，设置marginBottom给slogan留出位置就可以 123456789101112&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &lt;ImageView android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; android:layout_marginBottom=&quot;120dp&quot; android:scaleType=&quot;centerCrop&quot; android:src=&quot;@drawable/ad&quot; /&gt;&lt;/RelativeLayout&gt; 总结适配启动图的核心代码就是layer-list，将元素叠成启动图的样式，了解了这个知识点，更复杂一点的启动图也是可以适配的。 如果对layer-list不了解可以看官方文档（中文的）。","categories":[{"name":"Android适配","slug":"Android适配","permalink":"https://dyhdyh.com/categories/Android适配/"}],"tags":[{"name":"Splash","slug":"Splash","permalink":"https://dyhdyh.com/tags/Splash/"},{"name":"适配","slug":"适配","permalink":"https://dyhdyh.com/tags/适配/"}]},{"title":"如何真实有效的用代码滚动AppBarLayout","slug":"appbar-srcoll","date":"2018-12-25T02:56:44.000Z","updated":"2019-02-04T06:35:25.056Z","comments":true,"path":"posts/appbar-srcoll.html","link":"","permalink":"https://dyhdyh.com/posts/appbar-srcoll.html","excerpt":"","text":"Github地址：https://github.com/dengyuhan/AndroidViewHelper 效果图 Gradle 引入1implementation &apos;com.dyhdyh:view-helper:1.0.3&apos; 调用DesignViewHelper12345678//滚动AppBarLayoutDesignViewHelper.setAppBarLayoutOffset(appBar, offsetY);//以动画的形式滚动AppBarLayoutDesignViewHelper.setAppBarLayoutOffsetWithAnimate(appBar, offsetY, duration);//滚动AppBarLayout到顶部DesignViewHelper.scrollAppBarTop(appBar, isAnimate); 篇外话得吐槽一下国内的技术文章环境是真的烂，这个问题查来查去不是你抄他就是他抄你，没有一篇能够有效的让AppBarLayout滚动，那没办法只能自己解决了。 翻了老半天的源码，最终在HeaderBehavior中找到了setHeaderTopBottomOffset，过程很艰辛，结果很简单，但是这个方法不是public的调不到，所以要用反射去调，已经封装在DesignViewHelper，可以直接使用。 1234567891011121314151617int setHeaderTopBottomOffset(CoordinatorLayout parent, V header, int newOffset) &#123; return this.setHeaderTopBottomOffset(parent, header, newOffset, -2147483648, 2147483647);&#125;int setHeaderTopBottomOffset(CoordinatorLayout parent, V header, int newOffset, int minOffset, int maxOffset) &#123; int curOffset = this.getTopAndBottomOffset(); int consumed = 0; if (minOffset != 0 &amp;&amp; curOffset &gt;= minOffset &amp;&amp; curOffset &lt;= maxOffset) &#123; newOffset = MathUtils.clamp(newOffset, minOffset, maxOffset); if (curOffset != newOffset) &#123; this.setTopAndBottomOffset(newOffset); consumed = curOffset - newOffset; &#125; &#125; return consumed;&#125;","categories":[{"name":"Material Design","slug":"Material-Design","permalink":"https://dyhdyh.com/categories/Material-Design/"}],"tags":[{"name":"AppBarLayout","slug":"AppBarLayout","permalink":"https://dyhdyh.com/tags/AppBarLayout/"}]},{"title":"Homebrew安装指定版本软件","slug":"homebrew-historic-version","date":"2018-12-06T08:53:12.000Z","updated":"2019-02-04T06:35:25.021Z","comments":true,"path":"posts/homebrew-historic-version.html","link":"","permalink":"https://dyhdyh.com/posts/homebrew-historic-version.html","excerpt":"","text":"相关链接https://stackoverflow.com/questions/39187812/homebrew-how-to-install-older-versionshttps://stackoverflow.com/questions/3987683/homebrew-install-specific-version-of-formula 以安装groovy为例，最新的是2.5.4，但我需要安装2.4.91.在homebrew-core直接搜索groovy 2.4.9，找到该版本的提交记录 2.查看groovy.rb，这样就得到了历史版本的文件地址 3.直接用brew安装1brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/e091f8904349d6686637c9e0342b525cd58807db/Formula/groovy.rb","categories":[{"name":"开发工具","slug":"开发工具","permalink":"https://dyhdyh.com/categories/开发工具/"}],"tags":[{"name":"Homebrew","slug":"Homebrew","permalink":"https://dyhdyh.com/tags/Homebrew/"}]},{"title":"使用Proxifier+Shadowsocks实现Mac全局代理","slug":"mac-global-proxy","date":"2018-03-29T09:52:03.000Z","updated":"2019-02-04T06:35:25.038Z","comments":true,"path":"posts/mac-global-proxy.html","link":"","permalink":"https://dyhdyh.com/posts/mac-global-proxy.html","excerpt":"","text":"Proxifier可以使Mac上所有的应用都可以走代理，所以也可以让终端和iTerm的网络请求走代理1.下载Proxifier[Proxifier 2.15破解版] 2.配置端口打开Proxifier，打开Proxies - Add，添加代理，IP就是127.0.0.1，端口就是Shadowsocks的端口，如果你没有改过那就是1080 3.添加代理规则Default表示代理所有应用，将Default的Action修改为刚刚配置的端口，就可以让所有的应用都经过代理了 4.测试打开终端输入curl cip.cc，如果返回的是代理服务器的IP那说明就是成功了 1234//以下命令都可以查询ipcurl cip.cccurl ip.cncurl ipinfo.io","categories":[{"name":"科学上网","slug":"科学上网","permalink":"https://dyhdyh.com/categories/科学上网/"}],"tags":[{"name":"Proxifier","slug":"Proxifier","permalink":"https://dyhdyh.com/tags/Proxifier/"},{"name":"代理","slug":"代理","permalink":"https://dyhdyh.com/tags/代理/"},{"name":"全局代理","slug":"全局代理","permalink":"https://dyhdyh.com/tags/全局代理/"},{"name":"Shadowsocks","slug":"Shadowsocks","permalink":"https://dyhdyh.com/tags/Shadowsocks/"}]},{"title":"分享几个下载YouTube视频的网站和工具","slug":"youtube-download","date":"2017-01-02T19:09:59.000Z","updated":"2018-12-16T08:55:18.151Z","comments":true,"path":"posts/youtube-download.html","link":"","permalink":"https://dyhdyh.com/posts/youtube-download.html","excerpt":"","text":"硕鼠Youtube专用下载器软件，功能较多，需要代理才能解析（我个人用这个比较多） http://download.flvcd.com savefrom界面友好，可选择的清晰度较多 http://en.savefrom.net clipconverter几乎可以解析到所有的清晰度 http://www.clipconverter.cc FindYoutube可选择的清晰度较少（需要翻墙） http://www.findyoutube.com DownieMac上的视频网站下载软件，支持上百家国内外视频网站（收费） https://software.charliemonroe.net","categories":[{"name":"科学上网","slug":"科学上网","permalink":"https://dyhdyh.com/categories/科学上网/"}],"tags":[{"name":"Shadowsocks","slug":"Shadowsocks","permalink":"https://dyhdyh.com/tags/Shadowsocks/"},{"name":"YouTube","slug":"YouTube","permalink":"https://dyhdyh.com/tags/YouTube/"}]}]}